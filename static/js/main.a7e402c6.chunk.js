(this["webpackJsonpgraph-visualizer"]=this["webpackJsonpgraph-visualizer"]||[]).push([[0],{13:function(e,t,n){},19:function(e,t,n){},20:function(e,t,n){"use strict";n.r(t);var i=n(1),s=n.n(i),r=n(6),a=n.n(r),c=(n(13),n(8)),d=n(2),h=n(3),o=n(4),u=function(){function e(t,n,i){Object(h.a)(this,e),this.edges=void 0,this.N=void 0,this.edges=[],this.N=0,n?this.withWeight(t,i):this.withoutWeight(t,i)}return Object(o.a)(e,[{key:"withoutWeight",value:function(e,t){var n=JSON.parse(e);console.log(n);for(var i=0;i<n.length;i++)for(var s=0;s<n[i].length;s++)this.edges.push([i+(t?0:1),n[i][s]]);this.N=n.length}},{key:"withWeight",value:function(e,t){for(var n=JSON.parse(e),i=0;i<n.length;i++)for(var s=0;s<n[i].length;s++)this.edges.push([i+(t?0:1),n[i][s][0],n[i][s][1]]);this.N=n.length}},{key:"getEdges",value:function(){return this.edges}},{key:"getNumberOfNodes",value:function(){return this.N}}]),e}(),j=function(){function e(t,n,i){var s=this;Object(h.a)(this,e),this.edges=void 0,this.N=0;var r=JSON.parse(t);this.edges=r,r.forEach((function(e){s.N=Math.max(s.N,e[0],e[1])})),i&&this.N++}return Object(o.a)(e,[{key:"getEdges",value:function(){return this.edges}},{key:"getNumberOfNodes",value:function(){return this.N}}]),e}(),l=function(){function e(t,n,i,s){var r=this;Object(h.a)(this,e),this.nodes=[],this.edges=[],this.N=void 0;for(var a=0;a<t;a++)this.nodes.push({id:a+(s?0:1),label:(a+(s?0:1)).toString()});n&&n.forEach((function(e){i&&void 0!==e[2]?r.edges.push({from:e[0],to:e[1],label:e[2].toString()}):r.edges.push({from:e[0],to:e[1]})})),console.log(n),this.N=t}return Object(o.a)(e,[{key:"addEdge",value:function(e,t){e>0&&e<=this.N&&t>0&&t<=this.N&&this.edges.push({from:e,to:t})}},{key:"getEdges",value:function(){return this.edges}},{key:"getNodes",value:function(){return this.nodes}},{key:"getGraph",value:function(){return{nodes:this.nodes,edges:this.edges}}}]),e}();function g(e,t,n,i){if(0===i&&e!==t||1===i&&e>t)throw new Error(n)}var b=function(e,t,n,i,s){var r;r="edg"===t?new j(e,i,s):new u(e,i,s);var a=new l(r.getNumberOfNodes(),r.getEdges(),i,s);return function(e,t,n){var i=0;e.forEach((function(e){g(e.length,n?3:2,"Found an invalid edge for ".concat(n?"a weighted":"an unweighted"," graph."),0),g(Number.isInteger(e[0]),!0,"Expected number, found '"+e[0]+"'.",0),g(Number.isInteger(e[1]),!0,"Expected number, found '"+e[1]+"'.",0),i=Math.max(i,e[0],e[1])})),g(i,t,"Edge ID should be less than "+t+".",1)}(r.getEdges(),a.N,i),a.getGraph()},p=n(7),x=n.n(p),v=n(0);var O=function(e){var t=e.inputString,n=e.graph,i=e.inputType,s=e.isDirected,r=e.setShowGraph,a=e.isWeighted,c=e.is0;return Object(v.jsxs)("div",{className:"App",style:{height:"100%"},children:[Object(v.jsx)("button",{className:"center-button btn btn-dark",children:Object(v.jsx)("span",{className:"reload",onClick:function(){return r(!1)},children:"\u21bb"})}),Object(v.jsxs)("div",{style:{textAlign:"center"},children:[Object(v.jsx)("b",{children:"Input Type:"})," ","edg"===i?"Edges List":"Adjacency List","\u2003\u2003",Object(v.jsx)("b",{children:"Graph Type:"})," ",s?"Directed":"Undirected","\u2003\u2003",Object(v.jsx)("b",{children:"isWeighted:"}),a?"True":"False","\u2003\u2003",Object(v.jsx)("b",{children:"Start Index:"}),c?"0":"1"," ",Object(v.jsx)("br",{}),Object(v.jsx)("b",{children:"Input Array"})," ",t]}),Object(v.jsx)(x.a,{options:{edges:{arrows:{to:{enabled:s}}}},graph:n})]})};n(19);var f=function(e){var t=e.inputString,n=e.setinputString,i=e.parse,s=e.setInputType,r=e.inputType,a=e.setGraphType,c=e.graphType,d=e.format,h=e.error,o=e.isWeighted,u=e.setIsWeighted,j=e.setIs0,l=e.is0;return Object(v.jsx)("div",{className:"input-container",children:Object(v.jsxs)("div",{className:"card container",style:{margin:"auto"},children:[Object(v.jsx)("div",{children:Object(v.jsx)("h2",{style:{textAlign:"center",margin:10},children:" Input Graph "})}),Object(v.jsxs)("div",{className:"row",children:[Object(v.jsxs)("div",{className:"col-lg-6 col-sm-12 input-item",style:{borderRight:"1px solid rgba(0,0,0,.125)"},children:[Object(v.jsxs)("div",{className:"row",children:[Object(v.jsxs)("div",{className:"col-sm-4",children:[Object(v.jsx)("h5",{children:"Input Type"}),Object(v.jsxs)("div",{children:[Object(v.jsx)("input",{type:"radio",checked:"edg"===r,name:"inputType",value:"edg",onChange:function(){return s("edg")}})," Edges List"]}),Object(v.jsxs)("div",{children:[Object(v.jsx)("input",{type:"radio",checked:"adj"===r,name:"inputType",value:"adj",onChange:function(){return s("adj")}})," Adjacency List"]})]}),Object(v.jsxs)("div",{className:"col-sm-4",children:[Object(v.jsx)("h5",{children:"Graph Type"}),Object(v.jsxs)("div",{children:[Object(v.jsx)("input",{type:"radio",checked:"undirected"===c,name:"graphType",onChange:function(){return a("undirected")}})," Undirected List"]}),Object(v.jsxs)("div",{children:[Object(v.jsx)("input",{type:"radio",checked:"directed"===c,name:"graphType",onChange:function(){return a("directed")}})," Directed List"]})]}),Object(v.jsxs)("div",{className:"col-sm-4",children:[Object(v.jsx)("h5",{children:"Start Index"}),Object(v.jsxs)("div",{children:[Object(v.jsx)("input",{type:"radio",checked:!1===l,name:"is0",value:"1",onChange:function(){return j(!1)}})," 1"]}),Object(v.jsxs)("div",{children:[Object(v.jsx)("input",{type:"radio",checked:!0===l,name:"is0",value:"0",onChange:function(){return j(!0)}})," 0"]})]})]}),Object(v.jsxs)("div",{style:{width:"100%",margin:"10px 0px"},children:[Object(v.jsx)("input",{type:"checkbox",onChange:function(e){u(e.target.checked)},checked:o}),"    Is Graph Weighted?"]}),Object(v.jsxs)("div",{style:{width:"100%"},children:[Object(v.jsx)("h5",{children:"Input Array"}),Object(v.jsx)("textarea",{placeholder:d.ex,rows:5,style:{padding:10,resize:"none",width:"100%"},value:t,onChange:function(e){return n(e.target.value)}})]})]}),Object(v.jsxs)("div",{className:"col-lg-6 col-sm-12 input-item",children:[Object(v.jsx)("h5",{children:"Input Format"}),Object(v.jsx)("p",{children:d.text}),Object(v.jsx)("b",{children:"Example:"})," ",Object(v.jsx)("pre",{children:d.ex}),Object(v.jsx)("p",{children:d.exp})]})]}),Object(v.jsx)("div",{className:"row"}),Object(v.jsx)("hr",{}),Object(v.jsx)("div",{style:{color:"red",textAlign:"center"},children:h}),Object(v.jsx)("div",{children:Object(v.jsx)("button",{className:"input-submit",onClick:i,children:"Submit"})})]})})},m={unw:{edg:{text:"Provide an array G where G[i] = [ui, vi] denotes that there is an edge between nodes ui and vi.",ex:"[[1,2],[1,3],[2,3]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."},adj:{text:"Provide an array G where G[i] is the list of vertices adjacent to the ith vertex. The size of the array is equal to the number of vertices.",ex:"[[2,3],[3],[]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."}},w:{edg:{text:"Provide an array G where G[i] = [ui, vi, wi] denotes that there is an edge between nodes ui and vi with weight wi.",ex:"[[1,2,8],[1,3,9],[2,3,7]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."},adj:{text:"Provide an array G where G[i] is the list of pair of vertex and distance adjacent to the ith vertex. The size of the array is equal to the number of vertices.",ex:"[\n  [[2,8],[3,9]],\n  [[3,7]],\n  []\n]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."}}};var y=function(){var e=Object(i.useState)(""),t=Object(d.a)(e,2),n=t[0],s=t[1],r=Object(i.useState)({nodes:[],edges:[]}),a=Object(d.a)(r,2),h=a[0],o=a[1],u=Object(i.useState)(!1),j=Object(d.a)(u,2),l=j[0],g=j[1],p=Object(i.useState)("edg"),x=Object(d.a)(p,2),y=x[0],N=x[1],w=Object(i.useState)("undirected"),S=Object(d.a)(w,2),k=S[0],T=S[1],G=Object(i.useState)(""),I=Object(d.a)(G,2),E=I[0],C=I[1],W=Object(i.useState)(!1),z=Object(d.a)(W,2),A=z[0],J=z[1],L=Object(i.useState)(!1),F=Object(d.a)(L,2),M=F[0],D=F[1];if(console.log(M),l)return Object(v.jsx)(O,{graph:h,inputString:n,graphType:k,inputType:y,isDirected:"directed"===k,isWeighted:A,setShowGraph:g,is0:M});var P=A?m.w[y]:m.unw[y];M&&(P=JSON.parse(JSON.stringify(P).split("").map((function(e){return" "===e||isNaN(e)?e:parseInt(e)-1})).join("")));var q={isWeighted:A,setIsWeighted:J,setinputString:s,parse:function(){C("");try{o(b(n,y,k,A,M)),g(!0)}catch(e){console.error(e),C(e.message.replace("JSON","Array"))}},inputString:n,setInputType:N,is0:M,setIs0:D,inputType:y,setGraphType:T,graphType:k,error:E,format:P};return Object(v.jsx)(f,Object(c.a)({},q))},N=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,22)).then((function(t){var n=t.getCLS,i=t.getFID,s=t.getFCP,r=t.getLCP,a=t.getTTFB;n(e),i(e),s(e),r(e),a(e)}))};a.a.render(Object(v.jsxs)(s.a.StrictMode,{children:[Object(v.jsxs)("nav",{className:"navbar navbar-dark bg-dark",children:[Object(v.jsx)("a",{className:"navbar-brand",href:"/",children:"Graph Visualizer"}),Object(v.jsx)("a",{className:"github-button",href:"https://github.com/awasthishubh/graph-visualizer","data-icon":"octicon-star","data-size":"large","aria-label":"Star awasthishubh/graph-visualizer on GitHub",children:"Star on GitHub"})]}),Object(v.jsx)("div",{style:{height:"calc(100vh - 56px)"},children:Object(v.jsx)(y,{})})]}),document.getElementById("root")),N()}},[[20,1,2]]]);
//# sourceMappingURL=main.a7e402c6.chunk.js.map