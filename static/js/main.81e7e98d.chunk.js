(this["webpackJsonpgraph-visualizer"]=this["webpackJsonpgraph-visualizer"]||[]).push([[0],{13:function(e,t,i){},19:function(e,t,i){},20:function(e,t,i){"use strict";i.r(t);var n=i(1),r=i.n(n),s=i(6),a=i.n(s),c=(i(13),i(8)),h=i(2),d=i(3),o=i(4),l=function(){function e(t,i,n){Object(d.a)(this,e),this.edges=void 0,this.N=void 0,this.edges=[],this.N=0,i?this.withWeight(t,n):this.withoutWeight(t,n)}return Object(o.a)(e,[{key:"withoutWeight",value:function(e,t){var i=JSON.parse(e);console.log(i);for(var n=0;n<i.length;n++)for(var r=0;r<i[n].length;r++)this.edges.push([n+(t?0:1),i[n][r]]);this.N=i.length}},{key:"withWeight",value:function(e,t){for(var i=JSON.parse(e),n=0;n<i.length;n++)for(var r=0;r<i[n].length;r++)this.edges.push([n+(t?0:1),i[n][r][0],i[n][r][1]]);this.N=i.length}},{key:"getEdges",value:function(){return this.edges}},{key:"getNumberOfNodes",value:function(){return this.N}}]),e}(),u=function(){function e(t,i,n){var r=this;Object(d.a)(this,e),this.edges=void 0,this.N=0;var s=JSON.parse(t);this.edges=s,s.forEach((function(e){r.N=Math.max(r.N,e[0],e[1])})),n&&this.N++}return Object(o.a)(e,[{key:"getEdges",value:function(){return this.edges}},{key:"getNumberOfNodes",value:function(){return this.N}}]),e}(),g=function(){function e(t,i,n,r){var s=this;Object(d.a)(this,e),this.nodes=[],this.edges=[],this.N=void 0;for(var a=0;a<t;a++)this.nodes.push({id:a+(r?0:1),label:(a+(r?0:1)).toString()});i&&i.forEach((function(e){n&&void 0!==e[2]?s.edges.push({from:e[0],to:e[1],label:e[2].toString()}):s.edges.push({from:e[0],to:e[1]})})),console.log(i),this.N=t}return Object(o.a)(e,[{key:"addEdge",value:function(e,t){e>0&&e<=this.N&&t>0&&t<=this.N&&this.edges.push({from:e,to:t})}},{key:"getEdges",value:function(){return this.edges}},{key:"getNodes",value:function(){return this.nodes}},{key:"getGraph",value:function(){return{nodes:this.nodes,edges:this.edges}}}]),e}();function j(e,t,i,n){if(0===n&&e!==t||1===n&&e>t)throw new Error(i)}var p=function(e,t,i,n,r){var s;s="edg"===t?new u(e,n,r):new l(e,n,r);var a=new g(s.getNumberOfNodes(),s.getEdges(),n,r);return function(e,t,i){var n=0;e.forEach((function(e){j(e.length,i?3:2,"Found an invalid edge for ".concat(i?"a weighted":"an unweighted"," graph."),0),j(Number.isInteger(e[0]),!0,"Expected number, found '"+e[0]+"'.",0),j(Number.isInteger(e[1]),!0,"Expected number, found '"+e[1]+"'.",0),n=Math.max(n,e[0],e[1])})),j(n,t,"Edge ID should be less than "+t+".",1)}(s.getEdges(),a.N,n),a.getGraph()},b=i(7),m=i.n(b),x=i(0);var O=function(e){var t=e.inputString,i=e.graph,n=e.inputType,r=e.isDirected,s=e.setShowGraph,a=e.isWeighted,c=e.is0;return Object(x.jsxs)("div",{className:"App",style:{height:"100%"},children:[Object(x.jsx)("button",{className:"center-button btn btn-primary",onClick:function(){return s(!1)},children:Object(x.jsx)("span",{className:"reload",children:"\u21bb"})}),Object(x.jsxs)("div",{style:{textAlign:"center"},children:[Object(x.jsx)("b",{children:"Input Type:"})," ","edg"===n?"Edges List":"Adjacency List","\u2003\u2003",Object(x.jsx)("b",{children:"Graph Type:"})," ",r?"Directed":"Undirected","\u2003\u2003",Object(x.jsx)("b",{children:"isWeighted:"}),a?"True":"False","\u2003\u2003",Object(x.jsx)("b",{children:"Start Index:"}),c?"0":"1"," ",Object(x.jsx)("br",{}),Object(x.jsx)("b",{children:"Input Array"})," ",t]}),Object(x.jsx)(m.a,{options:{edges:{arrows:{to:{enabled:r}}}},graph:i})]})},v=(i(19),[{name:"Dijkstra's algorithm",link:"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"},{name:"DJP algorithm (Prim's algorithm) ",link:"https://en.wikipedia.org/wiki/Prim%27s_algorithm"},{name:"Dijkstra-Scholten algorithm",link:"https://en.wikipedia.org/wiki/Dijkstra%E2%80%93Scholten_algorithm"},{name:"Banker's algorithm",link:"https://en.wikipedia.org/wiki/Banker%27s_algorithm"},{name:"Dekker's algorithm (generalization)",link:"https://en.wikipedia.org/wiki/Dekker%27s_algorithm"},{name:"Smoothsort",link:"https://en.wikipedia.org/wiki/Smoothsort"},{name:"Shunting-yard algorithm",link:"https://en.wikipedia.org/wiki/Shunting-yard_algorithm"},{name:"Concurrent algorithms",link:"https://en.wikipedia.org/wiki/Concurrency_(computer_science)"},{name:"Distributed algorithms",link:"https://en.wikipedia.org/wiki/Distributed_algorithm"},{name:"Deadlock prevention algorithms",link:"https://en.wikipedia.org/wiki/Deadlock_prevention_algorithms"},{name:"Mutual exclusion algorithms",link:"https://en.wikipedia.org/wiki/Mutual_exclusion"},{name:"Self-stabilizing algorithms",link:"https://en.wikipedia.org/wiki/Self-stabilization"}]);var f=function(e){var t=e.inputString,i=e.setinputString,n=e.parse,r=e.setInputType,s=e.inputType,a=e.setGraphType,c=e.graphType,h=e.format,d=e.error,o=e.isWeighted,l=e.setIsWeighted,u=e.setIs0,g=e.is0;return Object(x.jsxs)("div",{className:"input-container",children:[Object(x.jsxs)("div",{className:"card container",children:[Object(x.jsx)("div",{children:Object(x.jsx)("h2",{style:{textAlign:"center",margin:10},children:" Input Graph "})}),Object(x.jsxs)("div",{className:"row",children:[Object(x.jsxs)("div",{className:"col-lg-6 col-sm-12 input-item",style:{borderRight:"1px solid rgba(0,0,0,.125)"},children:[Object(x.jsxs)("div",{className:"row",children:[Object(x.jsxs)("div",{className:"col-sm-4",children:[Object(x.jsx)("h5",{children:"Input Type"}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"edg"===s,name:"inputType",value:"edg",onChange:function(){return r("edg")}})," Edges List"]}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"adj"===s,name:"inputType",value:"adj",onChange:function(){return r("adj")}})," Adjacency List"]})]}),Object(x.jsxs)("div",{className:"col-sm-4",children:[Object(x.jsx)("h5",{children:"Graph Type"}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"undirected"===c,name:"graphType",onChange:function(){return a("undirected")}})," Undirected List"]}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"directed"===c,name:"graphType",onChange:function(){return a("directed")}})," Directed List"]})]}),Object(x.jsxs)("div",{className:"col-sm-4",children:[Object(x.jsx)("h5",{children:"Start Index"}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:!1===g,name:"is0",value:"1",onChange:function(){return u(!1)}})," 1"]}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:!0===g,name:"is0",value:"0",onChange:function(){return u(!0)}})," 0"]})]})]}),Object(x.jsxs)("div",{style:{width:"100%",margin:"10px 0px"},children:[Object(x.jsx)("input",{type:"checkbox",onChange:function(e){l(e.target.checked)},checked:o}),"    Is Graph Weighted?"]}),Object(x.jsxs)("div",{style:{width:"100%"},children:[Object(x.jsx)("h5",{children:"Input Array"}),Object(x.jsx)("textarea",{placeholder:h.ex,rows:5,style:{padding:10,resize:"none",width:"100%"},value:t,onChange:function(e){return i(e.target.value)}})]})]}),Object(x.jsxs)("div",{className:"col-lg-6 col-sm-12 input-item",children:[Object(x.jsx)("h5",{children:"Input Format"}),Object(x.jsx)("p",{children:h.text}),Object(x.jsx)("b",{children:"Example:"})," ",Object(x.jsx)("pre",{children:h.ex}),Object(x.jsx)("p",{children:h.exp})]})]}),Object(x.jsx)("div",{className:"row"}),Object(x.jsx)("hr",{}),Object(x.jsx)("div",{style:{color:"red",textAlign:"center"},children:d}),Object(x.jsx)("div",{style:{margin:"0 -15px",width:"calc(100% + 30px)"},children:Object(x.jsx)("button",{style:{borderRadius:"0px 0px 0.25rem 0.25rem"},className:"input-submit btn btn-primary",onClick:n,children:"Submit"})})]}),Object(x.jsx)("div",{}),Object(x.jsx)("div",{className:"card",style:{textAlign:"left"},children:Object(x.jsxs)("div",{className:"card-body",children:[Object(x.jsx)("h5",{className:"card-title",children:"Useful Algorithms"}),Object(x.jsx)("h6",{className:"card-subtitle mb-2 text-muted",children:"Links"}),Object(x.jsx)("p",{className:"card-text",children:Object(x.jsx)("ol",{children:v.map((function(e){return Object(x.jsxs)("li",{children:[" ",Object(x.jsxs)("a",{rel:"noopener noreferrer",target:"_blank",href:e.link,children:[" ",e.name]})]})}))})})]})})]})},k={unw:{edg:{text:"Provide an array G where G[i] = [ui, vi] denotes that there is an edge between nodes ui and vi.",ex:"[[1,2],[1,3],[2,3]]",in:"[[1,2],[1,5],[1,1],[5,2],[4,3],[4,5],[3,2],[6,4],[5,5]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."},adj:{text:"Provide an array G where G[i] is the list of vertices adjacent to the ith vertex. The size of the array is equal to the number of vertices.",ex:"[[2,3],[3],[]]",in:"[[2,3,1],[],[4,5],[3,4],[1],[4,1]]",exp:"Means there are edges from 1 to 2,3 from 1 to 3 and 2 to 3."}},w:{edg:{text:"Provide an array G where G[i] = [ui, vi, wi] denotes that there is an edge between nodes ui and vi with weight wi.",ex:"[[1,2,8],[1,3,9],[2,3,7]]",in:"[[1,2,5],[1,3,7],[2,3,8],[4,4,9],[4,5,9],[5,6,1],[6,4,3],[6,1,9],[1,1,8]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."},adj:{text:"Provide an array G where G[i] is the list of pair of vertex and distance adjacent to the ith vertex. The size of the array is equal to the number of vertices.",ex:"[\n  [[2,8],[3,9]],\n  [[3,7]],\n  []\n]",in:"[[[1,1],[2,5],[3,3]],[[3,7]],[[4,8],[5,9]],[[2,3],[3,1]],[[1,9]],[[4,4],[1,6],[6,6]]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."}}};var y=function(){var e=Object(n.useState)(""),t=Object(h.a)(e,2),i=t[0],s=t[1],a=Object(n.useState)({nodes:[],edges:[]}),d=Object(h.a)(a,2),o=d[0],l=d[1],u=Object(n.useState)(!1),g=Object(h.a)(u,2),j=g[0],b=g[1],m=Object(n.useState)("edg"),v=Object(h.a)(m,2),y=v[0],w=v[1],N=Object(n.useState)("undirected"),S=Object(h.a)(N,2),T=S[0],G=S[1],I=Object(n.useState)(""),E=Object(h.a)(I,2),D=E[0],C=E[1],_=Object(n.useState)(!1),z=Object(h.a)(_,2),W=z[0],A=z[1],L=Object(n.useState)(!1),M=Object(h.a)(L,2),P=M[0],J=M[1],F=W?k.w[y]:k.unw[y];if(P&&(F=JSON.parse(JSON.stringify(F).split("").map((function(e){return" "===e||isNaN(e)?e:parseInt(e)-1})).join(""))),r.a.useEffect((function(){s(F.in)}),[F]),console.log(P),j)return Object(x.jsx)(O,{graph:o,inputString:i,graphType:T,inputType:y,isDirected:"directed"===T,isWeighted:W,setShowGraph:b,is0:P});var B={isWeighted:W,setIsWeighted:A,setinputString:s,parse:function(){C("");try{l(p(i,y,T,W,P)),b(!0)}catch(e){console.error(e),console.error(e.message),C("Enter a valid Array according to the format.")}},inputString:i,setInputType:w,is0:P,setIs0:J,inputType:y,setGraphType:G,graphType:T,error:D,format:F};return Object(x.jsx)(f,Object(c.a)({},B))},w=function(e){e&&e instanceof Function&&i.e(3).then(i.bind(null,22)).then((function(t){var i=t.getCLS,n=t.getFID,r=t.getFCP,s=t.getLCP,a=t.getTTFB;i(e),n(e),r(e),s(e),a(e)}))};a.a.render(Object(x.jsxs)(r.a.StrictMode,{children:[Object(x.jsxs)("nav",{className:"navbar navbar-dark bg-dark",children:[Object(x.jsx)("a",{className:"navbar-brand",href:"/",children:"Graph Visualizer"}),Object(x.jsx)("a",{className:"github-button",href:"https://github.com/awasthishubh/graph-visualizer","data-icon":"octicon-star","data-size":"large","aria-label":"Star awasthishubh/graph-visualizer on GitHub",children:"Star on GitHub"})]}),Object(x.jsx)("div",{style:{height:"calc(100vh - 56px)"},children:Object(x.jsx)(y,{})})]}),document.getElementById("root")),w()}},[[20,1,2]]]);
//# sourceMappingURL=main.81e7e98d.chunk.js.map