(this["webpackJsonpgraph-visualizer"]=this["webpackJsonpgraph-visualizer"]||[]).push([[0],{13:function(e,t,n){},19:function(e,t,n){},20:function(e,t,n){"use strict";n.r(t);var i=n(1),r=n.n(i),s=n(6),a=n.n(s),c=(n(13),n(8)),h=n(2),d=n(3),o=n(4),l=function(){function e(t,n,i){Object(d.a)(this,e),this.edges=void 0,this.N=void 0,this.edges=[],this.N=0,n?this.withWeight(t,i):this.withoutWeight(t,i)}return Object(o.a)(e,[{key:"withoutWeight",value:function(e,t){var n=JSON.parse(e);console.log(n);for(var i=0;i<n.length;i++)for(var r=0;r<n[i].length;r++)this.edges.push([i+(t?0:1),n[i][r]]);this.N=n.length}},{key:"withWeight",value:function(e,t){for(var n=JSON.parse(e),i=0;i<n.length;i++)for(var r=0;r<n[i].length;r++)this.edges.push([i+(t?0:1),n[i][r][0],n[i][r][1]]);this.N=n.length}},{key:"getEdges",value:function(){return this.edges}},{key:"getNumberOfNodes",value:function(){return this.N}}]),e}(),u=function(){function e(t,n,i){var r=this;Object(d.a)(this,e),this.edges=void 0,this.N=0;var s=JSON.parse(t);this.edges=s,s.forEach((function(e){r.N=Math.max(r.N,e[0],e[1])})),i&&this.N++}return Object(o.a)(e,[{key:"getEdges",value:function(){return this.edges}},{key:"getNumberOfNodes",value:function(){return this.N}}]),e}(),g=function(){function e(t,n,i,r){var s=this;Object(d.a)(this,e),this.nodes=[],this.edges=[],this.N=void 0;for(var a=0;a<t;a++)this.nodes.push({id:a+(r?0:1),label:(a+(r?0:1)).toString()});n&&n.forEach((function(e,t){i&&void 0!==e[2]?s.edges.push({id:t,from:e[0],to:e[1],label:e[2].toString()}):s.edges.push({id:t,from:e[0],to:e[1],smooth:{type:"curvedCW",roundness:.2}})})),console.log(n),this.N=t}return Object(o.a)(e,[{key:"addEdge",value:function(e,t,n){e>0&&e<=this.N&&t>0&&t<=this.N&&this.edges.push({id:n,from:e,to:t})}},{key:"getEdges",value:function(){return this.edges}},{key:"getNodes",value:function(){return this.nodes}},{key:"getGraph",value:function(){return{nodes:this.nodes,edges:this.edges}}}]),e}();function p(e,t,n,i){if(0===i&&e!==t||1===i&&e>t)throw new Error(n)}var j=function(e,t,n,i,r,s){var a;if(s){var c=[];e.split("\n").forEach((function(e,t){0!==t&&c.push(e.trim().split(" ").map((function(e){return parseInt(e)})))})),e=JSON.stringify(c)}a="edg"===t?new u(e,i,r):new l(e,i,r);var h=new g(a.getNumberOfNodes(),a.getEdges(),i,r);return function(e,t,n){var i=0;e.forEach((function(e){p(e.length,n?3:2,"Found an invalid edge for ".concat(n?"a weighted":"an unweighted"," graph."),0),p(Number.isInteger(e[0]),!0,"Expected number, found '"+e[0]+"'.",0),p(Number.isInteger(e[1]),!0,"Expected number, found '"+e[1]+"'.",0),i=Math.max(i,e[0],e[1])})),p(i,t,"Edge ID should be less than "+t+".",1)}(a.getEdges(),h.N,i),h.getGraph()},b=n(7),m=n.n(b),x=n(0);var v=function(e){var t=e.inputString,n=e.graph,i=e.inputFormat,r=e.isDirected,s=e.setShowGraph,a=e.isWeighted,c=e.is0;return Object(x.jsxs)("div",{className:"App",style:{height:"100%"},children:[Object(x.jsxs)("div",{style:{textAlign:"center",height:55},children:[Object(x.jsx)("b",{children:"Input Type:"})," ","edg"===i?"Edges List":"Adjacency List","\u2003\u2003",Object(x.jsx)("b",{children:"Graph Type:"})," ",r?"Directed":"Undirected","\u2003\u2003",Object(x.jsx)("b",{children:"isWeighted:"}),a?"True":"False","\u2003\u2003",Object(x.jsx)("b",{children:"Start Index:"}),c?"0":"1"," ",Object(x.jsx)("br",{}),Object(x.jsx)("b",{children:"Input"})," ",t]}),Object(x.jsx)("div",{style:{height:"calc(100% - 105px)"},children:Object(x.jsx)(m.a,{options:{edges:{arrows:{to:{enabled:r}}}},graph:n})}),Object(x.jsx)("div",{style:{textAlign:"center",height:20},children:Object(x.jsx)("button",{className:"center-button btn btn-primary",onClick:function(){return s(!1)},children:Object(x.jsx)("span",{className:"reload",children:"\u21bb"})})})]})},O=(n(19),[{name:"Dijkstra's algorithm",link:"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"},{name:"DJP algorithm (Prim's algorithm) ",link:"https://en.wikipedia.org/wiki/Prim%27s_algorithm"},{name:"Dijkstra-Scholten algorithm",link:"https://en.wikipedia.org/wiki/Dijkstra%E2%80%93Scholten_algorithm"},{name:"Banker's algorithm",link:"https://en.wikipedia.org/wiki/Banker%27s_algorithm"},{name:"Dekker's algorithm (generalization)",link:"https://en.wikipedia.org/wiki/Dekker%27s_algorithm"},{name:"Smoothsort",link:"https://en.wikipedia.org/wiki/Smoothsort"},{name:"Shunting-yard algorithm",link:"https://en.wikipedia.org/wiki/Shunting-yard_algorithm"},{name:"Concurrent algorithms",link:"https://en.wikipedia.org/wiki/Concurrency_(computer_science)"},{name:"Distributed algorithms",link:"https://en.wikipedia.org/wiki/Distributed_algorithm"},{name:"Deadlock prevention algorithms",link:"https://en.wikipedia.org/wiki/Deadlock_prevention_algorithms"},{name:"Mutual exclusion algorithms",link:"https://en.wikipedia.org/wiki/Mutual_exclusion"},{name:"Self-stabilizing algorithms",link:"https://en.wikipedia.org/wiki/Self-stabilization"}]);var f=function(e){var t=e.inputString,n=e.setinputString,i=e.parse,r=e.setinputFormat,s=e.inputFormat,a=e.setGraphType,c=e.graphType,h=e.format,d=e.error,o=e.isWeighted,l=e.setIsWeighted,u=e.setIs0,g=e.is0,p=e.inputType,j=e.setInputType;return Object(x.jsxs)("div",{className:"input-container",children:[Object(x.jsxs)("div",{className:"card container",children:[Object(x.jsx)("div",{children:Object(x.jsx)("h2",{style:{textAlign:"center",margin:10},children:" Input Graph "})}),Object(x.jsxs)("div",{className:"row",children:[Object(x.jsxs)("div",{className:"col-lg-6 col-sm-12 input-item",style:{borderRight:"1px solid rgba(0,0,0,.125)"},children:[Object(x.jsxs)("div",{className:"row",children:[Object(x.jsxs)("div",{className:"col-sm-6",children:[Object(x.jsx)("h5",{children:"Input Type"}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"plain"===p,name:"inputType",value:"plain",onChange:function(){r("edg"),j("plain")}})," Plain Text"]}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"array"===p,name:"inputType",value:"array",onChange:function(){return j("array")}})," Array"]})]}),Object(x.jsxs)("div",{className:"col-sm-6",children:[Object(x.jsx)("h5",{children:"Input Format"}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"edg"===s,name:"inputFormat",value:"edg",onChange:function(){return r("edg")}})," Edges List"]}),"plain"===p?Object(x.jsx)("div",{}):Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"adj"===s,name:"inputFormat",value:"adj",onChange:function(){return r("adj")}})," Adjacency List"]})]}),Object(x.jsxs)("div",{className:"col-sm-6",children:[Object(x.jsx)("h5",{children:"Graph Type"}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"undirected"===c,name:"graphType",onChange:function(){return a("undirected")}})," Undirected List"]}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:"directed"===c,name:"graphType",onChange:function(){return a("directed")}})," Directed List"]})]}),Object(x.jsxs)("div",{className:"col-sm-6",children:[Object(x.jsx)("h5",{children:"Start Index"}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:!1===g,name:"is0",value:"1",onChange:function(){return u(!1)}})," 1"]}),Object(x.jsxs)("div",{children:[Object(x.jsx)("input",{type:"radio",checked:!0===g,name:"is0",value:"0",onChange:function(){return u(!0)}})," 0"]})]})]}),Object(x.jsxs)("div",{style:{width:"100%",margin:"10px 0px"},children:[Object(x.jsx)("input",{type:"checkbox",onChange:function(e){l(e.target.checked)},checked:o}),"    Is Graph Weighted?"]}),Object(x.jsxs)("div",{style:{width:"100%"},children:[Object(x.jsx)("h5",{children:"Input"}),Object(x.jsx)("textarea",{placeholder:h.ex,rows:5,style:{padding:10,resize:"none",width:"100%"},value:t,onChange:function(e){return n(e.target.value)}})]})]}),Object(x.jsxs)("div",{className:"col-lg-6 col-sm-12 input-item",children:[Object(x.jsx)("h5",{children:"Input Format"}),Object(x.jsx)("pre",{style:{whiteSpace:"break-spaces"},children:h.text}),Object(x.jsx)("b",{children:"Example:"})," ",Object(x.jsx)("pre",{children:h.ex}),Object(x.jsx)("p",{children:h.exp})]})]}),Object(x.jsx)("div",{className:"row"}),Object(x.jsx)("hr",{}),Object(x.jsx)("div",{style:{color:"red",textAlign:"center"},children:d}),Object(x.jsx)("div",{style:{margin:"0 -15px",width:"calc(100% + 30px)"},children:Object(x.jsx)("button",{style:{borderRadius:"0px 0px 0.25rem 0.25rem"},className:"input-submit btn btn-primary",onClick:i,children:"Submit"})})]}),Object(x.jsx)("div",{}),Object(x.jsx)("div",{className:"card",style:{textAlign:"left"},children:Object(x.jsxs)("div",{className:"card-body",children:[Object(x.jsx)("h5",{className:"card-title",children:"Useful Algorithms"}),Object(x.jsx)("h6",{className:"card-subtitle mb-2 text-muted",children:"Links"}),Object(x.jsx)("div",{className:"card-text",children:Object(x.jsx)("ol",{children:O.map((function(e,t){return Object(x.jsxs)("li",{children:[" ",Object(x.jsxs)("a",{rel:"noopener noreferrer",target:"_blank",href:e.link,children:[" ",e.name]})]},t)}))})})]})})]})},w={plain:{unw:{edg:{text:"The first line contains two integers \ud835\udc5b, \ud835\udc5a \u2014 the number of vertices and the number of edges in the graph.\nThe \ud835\udc56-th of the next \ud835\udc5a lines contains two integers \ud835\udc4e\ud835\udc56, \ud835\udc4f\ud835\udc56 representing an edge connecting \ud835\udc4e\ud835\udc56 and \ud835\udc4f\ud835\udc56",ex:"3 3\n1 2\n1 3\n2 3",in:"6 9\n1 2\n1 5\n1 1\n5 2\n4 3\n4 5\n3 2\n6 4\n5 5",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."}},w:{edg:{text:"The first line contains two integers \ud835\udc5b, \ud835\udc5a \u2014 the number of vertices and the number of edges in the graph.\nThe \ud835\udc56-th of the next \ud835\udc5a lines contains tree integers a\ud835\udc56, b\ud835\udc56, w\ud835\udc56 representing an edge connecting \ud835\udc4e\ud835\udc56 and \ud835\udc4f\ud835\udc56 with weight w\ud835\udc56",ex:"3 3\n1 2 8\n1 3 9\n2 3 7",in:"6 9\n1 2 5\n1 3 7\n2 3 8\n4 4 9\n4 5 9\n5 6 1\n6 4 3\n6 1 9\n1 1 8",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."}}},array:{unw:{edg:{text:"Provide an array G where G[i] = [ui, vi] denotes that there is an edge between nodes ui and vi.",ex:"[[1,2],[1,3],[2,3]]",in:"[[1,2],[1,5],[1,1],[5,2],[4,3],[4,5],[3,2],[6,4],[5,5]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."},adj:{text:"Provide an array G where G[i] is the list of vertices adjacent to the ith vertex. The size of the array is equal to the number of vertices.",ex:"[[2,3],[3],[]]",in:"[[2,3,1],[],[4,5],[3,4],[1],[4,1]]",exp:"Means there are edges from 1 to 2,3 from 1 to 3 and 2 to 3."}},w:{edg:{text:"Provide an array G where G[i] = [ui, vi, wi] denotes that there is an edge between nodes ui and vi with weight wi.",ex:"[[1,2,8],[1,3,9],[2,3,7]]",in:"[[1,2,5],[1,3,7],[2,3,8],[4,4,9],[4,5,9],[5,6,1],[6,4,3],[6,1,9],[1,1,8]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."},adj:{text:"Provide an array G where G[i] is the list of pair of vertex and distance adjacent to the ith vertex. The size of the array is equal to the number of vertices.",ex:"[\n [[2,8],[3,9]],\n [[3,7]],\n []\n]",in:"[[[1,1],[2,5],[3,3]],[[3,7]],[[4,8],[5,9]],[[2,3],[3,1]],[[1,9]],[[4,4],[1,6],[6,6]]]",exp:"Means there are edges from 1 to 2, 1 to 3 and 2 to 3."}}}};function k(e){return e.split("\n").map((function(t,n){return 0===n?(parseInt(e[0])+1).toString()+" "+(parseInt(e[2])+1).toString():t})).join("\n")}var y={s1:w,s0:function(e){var t=JSON.parse(JSON.stringify(w).split("").map((function(e){return" "===e||isNaN(e)?e:parseInt(e)-1})).join(""));return t.plain.unw.edg.ex=k(t.plain.unw.edg.ex),t.plain.unw.edg.in=k(t.plain.unw.edg.in),t.plain.w.edg.ex=k(t.plain.w.edg.ex),t.plain.w.edg.in=k(t.plain.w.edg.in),t}()};var N=function(){var e=Object(i.useState)(""),t=Object(h.a)(e,2),n=t[0],s=t[1],a=Object(i.useState)({nodes:[],edges:[]}),d=Object(h.a)(a,2),o=d[0],l=d[1],u=Object(i.useState)(!1),g=Object(h.a)(u,2),p=g[0],b=g[1],m=Object(i.useState)("edg"),O=Object(h.a)(m,2),w=O[0],k=O[1],N=Object(i.useState)("undirected"),S=Object(h.a)(N,2),T=S[0],I=S[1],E=Object(i.useState)(""),G=Object(h.a)(E,2),C=G[0],D=G[1],F=Object(i.useState)(!1),W=Object(h.a)(F,2),_=W[0],z=W[1],A=Object(i.useState)(!1),M=Object(h.a)(A,2),P=M[0],J=M[1],L=Object(i.useState)("plain"),B=Object(h.a)(L,2),U=B[0],q=B[1],H=y[P?"s0":"s1"][U][_?"w":"unw"][w];if(r.a.useEffect((function(){s(H.in)}),[H]),p)return Object(x.jsx)(v,{graph:o,inputString:n,graphType:T,inputFormat:w,isDirected:"directed"===T,isWeighted:_,setShowGraph:b,is0:P});var R={isWeighted:_,setIsWeighted:z,setinputString:s,parse:function(){D("");try{l(j(n.trim(),w,T,_,P,"plain"===U)),b(!0)}catch(e){console.error(e),console.error(e.message),D("Enter a valid Array according to the format.")}},inputString:n,setinputFormat:k,is0:P,setIs0:J,inputFormat:w,setGraphType:I,graphType:T,error:C,inputType:U,setInputType:q,format:H};return Object(x.jsx)(f,Object(c.a)({},R))},S=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,22)).then((function(t){var n=t.getCLS,i=t.getFID,r=t.getFCP,s=t.getLCP,a=t.getTTFB;n(e),i(e),r(e),s(e),a(e)}))};a.a.render(Object(x.jsxs)(r.a.StrictMode,{children:[Object(x.jsxs)("nav",{className:"navbar navbar-dark bg-dark",children:[Object(x.jsx)("a",{className:"navbar-brand",href:"/",children:"Graph Visualizer"}),Object(x.jsx)("a",{className:"github-button",href:"https://github.com/awasthishubh/graph-visualizer","data-icon":"octicon-star","data-size":"large","aria-label":"Star awasthishubh/graph-visualizer on GitHub",children:"Star on GitHub"})]}),Object(x.jsx)("div",{style:{height:"calc(100vh - 56px)"},children:Object(x.jsx)(N,{})})]}),document.getElementById("root")),S()}},[[20,1,2]]]);
//# sourceMappingURL=main.18312a11.chunk.js.map